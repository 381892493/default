1 本地添加了文件 尚未git add 的 使用  git clean -df   恢复所有的文件/目录 //////
单独恢复制定的文件(只限于修改文件的恢复，如果是新增的文件是没有这个命令git clean -df 的) 修改文件 使用 git checkout -- 文件名,git checkout . 恢复当前所有的修改
2 git log --oneline 查看当前版本号 | -p 查看差异 | -2 最近的两次提交
3 已经add的修改 撤销add 恢复为修改的状态 git reset . 所有 | git reset HEAD 文件名 
4 git add . 增加所有
5 已经提交的 撤销提交 git log --oneline  git reset HEAD名  直接恢复到位add的版本。。。注意和下面的区别 
git reset --hard 82283b0  恢复到这个提交过的版本未发生任何的变化 应用更多的是这个。
6 git diff 不加参数即默认比较工作区与暂存区 未add的比较
7 git diff + heade 与这个版本比较差异
8 $ git commit -m 'initial commit'
$ git add forgotten_file
$ git commit --amend    这种只会有1个提交记录
git commit -am 'sfdsf' 执行添加和提交 (只限制非新文件 就是已经被git跟踪过的文件才能用am的命令)
9 git push origin master  推送master分支到远程仓库名为 origin
10 git remote rename pb paul 重命名一个远程仓库，
git remote add pb https://github.com/paulboone/ticgit 添加一个远程仓库，命名为pd  
如果你使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。
11 git tag -a v1.4 -m 'my version 1.4'  附注标签  git show v1.4 能看到信息 
git push origin --tags 推送全部的分支 | git push origin v1.0 推送这个分支 
通过git push origin master –force强制提交当前版本号，以达到撤销版本号的目的： 一般不建议使用这个命令
12 git config --global alias.st status 别名st
13 $ git branch testing 创建分支 git checkout 切换分支 git checkout -b iss53 创建并切换分支 
git branch -d hotfix(分支名) 删除分支
14 并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？

幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：
git stash

工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：

工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：

一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；

另一种方式是用git stash pop，恢复的同时把stash内容也删了：





1 hg diff    hg diff -r 6993ee0de9d2  版本号
mercurial是分布式的版本控制系统，在此列出开发过程中常用的命令。

一、正常流程

1、查看项目状态

hg st

2、将未加入索引的文件加入索引

hg add 文件  

或者 hg add . 将所有的加入索引中

3、提交修改

hg ci -m "提交说明"

4、初次推送代码

hg push --new-branch

5、非初次推送代码

hg  push -b 分支号

二、分支管理

1、新建分支

hg branch  分支号

2、查看当前分支

hg branch 

3、查看所有分支

hg branches

4、切换分支

hg update 新分支号

5、合并分支

hg merge 分支号

或者 hg merge  ，即是不加分支号，此时合并自己分支的多个head头，多用于多人操作同一分支后，进行合并操作

三、更新操作

1、更新当前项目状态

hg update 

2、更新代码

hg pull

四、回退操作

1、代码未提交时（即没有进行 hg ci -m “提交" 操作），还原代码

hg revert 文件名 

或者 hg revert -a 还原所有修改

2、代码提交了一次，还原提交，此时修改的代码还在，特别注意，此操作只能还原一次，多次是不行的

hg rollback 
--------------------- 
作者：panda-star 
来源：CSDN 
原文：https://blog.csdn.net/chinabestchina/article/details/76401588 
版权声明：本文为博主原创文章，转载请附上博文链接！
